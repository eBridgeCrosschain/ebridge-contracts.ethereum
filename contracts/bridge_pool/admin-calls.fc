;; messages from admin

() handle_admin_messages(int op, int query_id, int my_balance, int msg_value, slice in_msg_body) impure inline {
    if (op == init_code_upgrade) { 
        (int end_code, _, int end_admin, slice admin) = unpack_temp_upgrade(storage::temp_upgrade);
        throw_unless(INVALID_CALL, end_code == 0); ;; upgrade already in progress
        storage::temp_upgrade = pack_temp_upgrade(now() + SEVENDAYS,  in_msg_body~load_ref(), end_admin, admin);
        save_storage();
        return ();
    }

    if (op == init_admin_upgrade) { 
        (int end_code, cell new_code, int end_admin, _) = unpack_temp_upgrade(storage::temp_upgrade);
        throw_unless(INVALID_CALL, end_admin == 0); ;; upgrade already in progress
        storage::temp_upgrade = pack_temp_upgrade(end_code, new_code, now() + TWODAYS, in_msg_body~load_msg_addr());
        save_storage();
        return ();
    }
    
    if (op == cancel_admin_upgrade) { 
        (int end_code, cell code, int end_admin, _) = unpack_temp_upgrade(storage::temp_upgrade);
        throw_unless(INVALID_CALL, end_admin > 0); 
        storage::temp_upgrade = pack_temp_upgrade(end_code, code, 0, HOLE_ADDRESS);
        save_storage();
        return ();
    }

    if (op == cancel_code_upgrade) { 
        (int end_code, _, int end_admin, slice admin) = unpack_temp_upgrade(storage::temp_upgrade);
        throw_unless(INVALID_CALL, end_code > 0); 
        storage::temp_upgrade = pack_temp_upgrade(0, empty_cell(), end_admin, admin);
        save_storage();
        return ();
    }

    ;; valid for both upgrades
    if (op == finalize_upgrades) { 
        (int end_code, cell new_code, int end_admin, slice new_admin) = unpack_temp_upgrade(storage::temp_upgrade);
        throw_unless(INVALID_CALL, (end_code + end_admin) > 0); ;; make sure at least one upgrade process is in progress

        if ((end_code > 0) & (now() >= end_code)) {
            set_code(new_code);
            end_code = 0;
            new_code = empty_cell();
        }

        if ((end_admin > 0) & (now() >= end_admin)) {
            storage::admin_address = new_admin;
            end_admin = 0;
            new_admin = HOLE_ADDRESS;
        }

        storage::temp_upgrade = pack_temp_upgrade(end_code, new_code, end_admin, new_admin);
        save_storage();
        return ();
    }

    if (op == set_daily_limit_config) {

    }

    if (op == set_rate_limit_config) {
       
    }

    throw(WRONG_OP);
}